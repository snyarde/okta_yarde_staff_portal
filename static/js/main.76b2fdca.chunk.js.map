{"version":3,"sources":["components/layout/Navbar.js","components/pages/Home.js","components/pages/Staff.js","components/auth/SignInWidget.js","components/auth/Login.js","components/pages/Table.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","id","Component","withAuth","state","authenticated","checkAuthentication","a","async","props","auth","isAuthenticated","setState","login","logout","this","mainContent","onClick","Staff","currentUserName","currentUserEmail","idToken","JSON","parse","localStorage","getItem","claims","name","email","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","renderEl","onSuccess","onError","remove","res","status","redirect","sessionToken","session","token","err","console","log","pathname","Table","config","issuer","clientId","redirectUri","onAuthRequired","history","push","App","basename","process","path","exact","component","Home","render","ImplicitCallback","Boolean","window","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76b2fdca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Yarde Metals Staff Portal\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/staff\">\r\n                  Staff\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/table\">\r\n                  Table\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withAuth } from \"@okta/okta-react\";\r\n\r\nexport default withAuth(\r\n  class Home extends Component {\r\n    state = { authenticated: null };\r\n    // constructor(props) {\r\n    //   super(props);\r\n    //   this.state = { authenticated: null };\r\n    // //   this.checkAuthentication = this.checkAuthentication.bind(this);\r\n    // //   this.login = this.login.bind(this);\r\n    // //   this.logout = this.logout.bind(this);\r\n    // }\r\n\r\n    checkAuthentication = async() => {\r\n      const authenticated = await this.props.auth.isAuthenticated();\r\n      if (authenticated !== this.state.authenticated) {\r\n        this.setState({ authenticated });\r\n      }\r\n    }\r\n\r\n    async componentDidMount() {\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    login = async() => {\r\n      this.props.auth.login(\"/\");\r\n    }\r\n\r\n    logout = async() => {\r\n      this.props.auth.logout(\"/\");\r\n    }\r\n\r\n    render() {\r\n      if (this.state.authenticated === null) return null;\r\n      const mainContent = this.state.authenticated ? (\r\n        <div>\r\n            <p className=\"lead\">You have entered the staff portal, <Link to=\"/staff\">click here</Link></p>\r\n            <button className=\"btn btn-light btn-lg\" onClick={this.logout}>Logout</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n            <p className=\"lead\">If you are a staff member, please get your credentials from your supervisor</p>\r\n            <button className=\"btn btn-dark btn-lg\" onClick={this.login}>Login</button>\r\n        </div>\r\n      );\r\n\r\n      return (\r\n        <div className=\"jumbotron\">\r\n          <h1 className=\"display-4\">Yarde Metals Staff Portal</h1>\r\n          {mainContent}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React, { Component } from 'react'\r\n\r\nclass Staff extends Component {\r\n    state = {\r\n        currentUserName: '',\r\n        currentUserEmail: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const idToken = JSON.parse(localStorage.getItem('okta-token-storage'));\r\n        this.setState({\r\n            currentUserName: idToken.idToken.claims.name,\r\n            currentUserEmail: idToken.idToken.claims.email\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { currentUserName, currentUserEmail } = (this.state);\r\n        return (\r\n            <div>\r\n                <h1>Welcome { currentUserName }</h1>\r\n                <p>Email: { currentUserEmail }</p>\r\n                <p>You have reached the authorized staff area of the portal</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Staff;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n// import '@okta/okta-signin-widget/dist/css/okta-theme.css';\r\n\r\nclass SignInWidget extends Component {\r\n  componentDidMount() {\r\n    const el = ReactDOM.findDOMNode(this);\r\n    this.widget = new OktaSignIn({\r\n      baseUrl: this.props.baseUrl,\r\n      logo: 'yarde-metals-logo.png',\r\n    //   authParams: {\r\n    //     pkce: true\r\n    //   }\r\n    });\r\n    this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.widget.remove();\r\n  }\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n};\r\n\r\nexport default SignInWidget;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SignInWidget from \"./SignInWidget\";\r\nimport { withAuth } from \"@okta/okta-react\";\r\n\r\nexport default withAuth(\r\n  class Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      // this.onSuccess = this.onSuccess.bind(this);\r\n      // this.onError = this.onError.bind(this);\r\n      this.state = {\r\n        authenticated: null\r\n      };\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    async checkAuthentication() {\r\n      const authenticated = await this.props.auth.isAuthenticated();\r\n      if (authenticated !== this.state.authenticated) {\r\n        this.setState({ authenticated });\r\n      }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    onSuccess = res => {\r\n      if (res.status === \"SUCCESS\") {\r\n        return this.props.auth.redirect({\r\n          sessionToken: res.session.token\r\n        });\r\n      } else {\r\n        // The user can be in another authentication state that requires further action.\r\n        // For more information about these states, see:\r\n        //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n      }\r\n    };\r\n\r\n    onError = err => {\r\n      console.log(\"error logging in\", err);\r\n    };\r\n\r\n    render() {\r\n      if (this.state.authenticated === null) return null;\r\n      return this.state.authenticated ? (\r\n        <Redirect to={{ pathname: \"/\" }} />\r\n      ) : (\r\n        <SignInWidget\r\n          baseUrl={this.props.baseUrl}\r\n          onSuccess={this.onSuccess}\r\n          onError={this.onError}\r\n        />\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React from 'react'\r\n\r\nexport default function Table() {\r\n    return (\r\n        <div>\r\n            <h1>This is the table page</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Security, SecureRoute, ImplicitCallback } from \"@okta/okta-react\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport Staff from \"./components/pages/Staff\";\nimport Login from \"./components/auth/Login\";\nimport Table from \"./components/pages/Table\";\n\nimport \"./App.css\";\n\nconst config = {\n  issuer: 'https://dev-999896.okta.com/oauth2/default',\n  // Settings for localhost dev\n  // redirectUri: window.location.origin + '/implicit/callback',\n  // clientId: '0oa26kok566LysAAm357', // localhost:3000\n\n  // Attempts to get GitHub pages to work\n  // redirectUri: window.location.origin + '/okta_yarde_staff_portal/implicit/callback', // seems like it gets to the redirect URL\n  // redirectUri: process.env.PUBLIC_URL + '/implicit/callback',\n  // redirectUri: 'https://snyarde.github.io/okta_yarde_staff_portal/implicit/callback', // seems like it gets to the redirect URL\n  clientId: '0oa26yany9zLArphj357', // https://snyarde.github.io/okta_yarde_staff_portal/\n  // redirectUri: window.location.origin + '/implicit/callback', // seems like it gets to the redirect URL when using custom domain\n  redirectUri: 'https://okta.mcwho.xyz/implicit/callback', // seems like it gets to the redirect URL when using custom domain\n  onAuthRequired: onAuthRequired,\n  // pkce: true\n}\n\nfunction onAuthRequired({history}) {\n  history.push('/login');\n}\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Security {...config}>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path=\"/table\" exact={true} component={Table} />\n            <SecureRoute path=\"/staff\" exact={true} component={Staff} />\n            <Route path='/login' render={() => <Login baseUrl='https://dev-999896.okta.com' />} />\n            <Route path='/implicit/callback' component={ImplicitCallback} />\n            {/* <Route path='/implicit/callback' component={Table} /> */}\n          </div>\n        </div>\n      </Security>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}